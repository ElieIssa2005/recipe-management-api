# src/test/resources/application-test.properties

# JWT Configuration for tests
# Replace with your own generated, strong Base64 encoded 64-byte key
jwt.secret=N1Nj3S3cr3tK3yF0rT3st1ngHS512PurposeV3ryL0ngAndS3cur312345!@#$%^ABCDEFghijklmnopExampleKey==
jwt.expiration=3600

# MongoDB Configuration for tests
# THIS IS CRITICAL: We are trying to prevent your main MongoConfig
# from using its hardcoded cloud URI default.
# By setting MONGODB_URI here to an empty string or a non-SRV local string,
# we change the URI that your @Value in MongoConfig will pick up.
# An empty string for MONGODB_URI might make MongoClients.create() in your main MongoConfig fail
# if it's not robust enough, which could be okay if embedded mongo's beans then take over.
# Alternatively, a simple local URI could be used by MongoConfig, but the embedded
# auto-configuration should ideally provide the @Primary beans.
MONGODB_URI=mongodb://localhost:27017/test_recipe_db_from_test_props 
# ^ This will be used by your main MongoConfig if it's active.
# The embedded mongo auto-configuration will use spring.data.mongodb.port.

# This tells the embedded mongo starter to pick a random available port.
# Spring Boot's EmbeddedMongoAutoConfiguration should then create the
# necessary MongoClient and MongoTemplate beans pointing to this embedded instance.
# These auto-configured beans are often @ConditionalOnMissingBean, so if your main
# MongoConfig successfully creates beans, the embedded ones might not.
spring.data.mongodb.port=0

# If your main MongoConfig is still creating a @Primary MongoClient to the cloud,
# and you cannot modify MongoConfig.java, this becomes very tricky.
# The TestMongoConfiguration might be needed to define @Primary embedded beans.

# Banner mode
spring.main.banner-mode=OFF

# Logging (verbose for debugging context issues)
logging.level.org.springframework.boot.autoconfigure.mongo=DEBUG
logging.level.org.springframework.data.mongodb=DEBUG
logging.level.de.flapdoodle.embed.mongo=INFO
logging.level.org.springframework.test.context=DEBUG
logging.level.org.springframework.boot.test=DEBUG
logging.level.com.example.recipeoop_1.config=DEBUG
logging.level.org.springframework.beans.factory=DEBUG # To see bean creation lifecycle